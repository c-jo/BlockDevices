/*******************************************************************
 * File:        device
 * Purpose:     Management of a single device
 * Author:      Chris Johns
 ******************************************************************/

#ifndef DEVICE_H
#define DEVICE_H

#include "BlockDevices.h"

typedef struct device_s {
    struct device_s * next;
    unsigned long     device_id;
    device_info_t     info;
    void *            driver_code;
    void *            driver_ws;
} device_t;


/*******************************************************************
 Function:      device_create
 Description:   Create a reference to a device
 Parameters:    location_id = location of the device
                capabilities = capabilities flags
                provider -> provider name (will be copied)
                driver_code -> the code to call for the driver
                driver_ws -> r12 value for the driver
 Returns:       pointer to the device_t, or NULL if failed
 ******************************************************************/
device_t *device_create(
              device_info_t * info,
              void *          driver_code,
              void *          driver_ws);

/*******************************************************************
 Function:      device_destroy
 Description:   Destroy the device
 Parameters:    device-> the device we're destroying (assumed to already have
                      been unlinked).
 Returns:       none
 ******************************************************************/
void device_destroy(device_t *device);

/*******************************************************************
 Function:      device_read
 Description:   Read data from a device.
 Parameters:    device -> the device to read from
                flags = read flags
                block -> transfer block
 Returns:       pointer to an error block if failed
                NULL if successful
 ******************************************************************/
_kernel_oserror *device_read(device_t *device, unsigned long flags, transfer_block_t *block);

/*******************************************************************
 Function:      device_write
 Description:   Write data to a device.
 Parameters:    device -> the device to write to
                flags = read flags
                block -> transfer block
 Returns:       pointer to an error block if failed
                NULL if successful
 ******************************************************************/
_kernel_oserror *device_write(device_t *device, unsigned long flags, transfer_block_t *block);

#endif
