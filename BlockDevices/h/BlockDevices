/*******************************************************************
 * File:        BlockDevice
 * Purpose:     Constants for accessing the block driver interfaces
 * Author:      Chris Johns
 ******************************************************************/

#ifndef BlockDevice_H
#define BlockDevice_H

#ifndef CMHG
#ifdef USE_LONG_LONG
// longlong.h defines USE_LONG_LONG itself
#undef USE_LONG_LONG
#include "longlong.h"
#define UINT64 ulonglong_t
#else
#include <stdint.h>
#define UINT64 uint64_t
#endif

// Invalid device id
#define DeviceId_Invalid 0

/* Flags understood in the device information block */
#define DeviceFlag_ReadOnly         (1u<<0)      /* Device cannot be written to */
#define DeviceFlag_CanEject         (1u<<1)      /* Supports the eject operation */
#define DeviceFlag_Debug            (1u<<31)     /* Debug enabled */
#define DeviceFlag_Valid            ((1u<<2)-1) | (1u<<31)  /* Mask of the valid device flags */

// The address of a block on a device
typedef UINT64 blockaddr_t;

// Interface types
typedef enum interface_type_e {
    BlockDevice_InterfaceType_Unknown = 0,
    BlockDevice_InterfaceType_FDC = 1,
    BlockDevice_InterfaceType_ST506 = 2,
    BlockDevice_InterfaceType_IDE = 3,
    BlockDevice_InterfaceType_SATA = 4,
    BlockDevice_InterfaceType_SCSI = 5,
    BlockDevice_InterfaceType_NVMe = 6
} interface_type_t;

// Interface Connections
typedef enum interface_connection_e {
    BlockDevice_InterfaceConnection_Unknown = 0,
    BlockDevice_InterfaceConnection_Motherboard = 1,
    BlockDevice_InterfaceConnection_Podule = 2,
    BlockDevice_InterfaceConnection_PCI = 3,
    BlockDevice_InterfaceConnection_Parallel = 4,
    BlockDevice_InterfaceConnection_Serial = 5,
    BlockDevice_InterfaceConnection_USB = 6
} interface_connection_t;

// Media types
typedef enum media_type_e {
    BlockDevice_MediaType_Unknown = 0,
    BlockDevice_MediaType_Floppy = 1,
    BlockDevice_MediaType_HDD = 2,
    BlockDevice_MediaType_SSD = 3,
    BlockDevice_MediaType_RAM = 4,
    BlockDevice_MediaType_CD = 5,
    BlockDevice_MediaType_DVD = 6,
    BlockDevice_MediaType_BD = 7
} media_type_type_t;

// Partition schemes
typedef enum partition_scheme_e {
    BlockDevice_PartitionScheme_None = 0,
    BlockDevice_PartitionScheme_MBR = 1,
    BlockDevice_PartitionScheme_GPT = 2
} partition_scheme_t;

// Block device info block
typedef struct device_info_s {
    unsigned    device_flags;
    unsigned    interface_type:8;
    unsigned    interface_connection:8;
    unsigned    media_type:8;
    unsigned    unused_1:8;
    unsigned    parent_device;
    unsigned    partition_scheme:8;
    unsigned    partition_index:16;
    unsigned    unused_2:8;
    void *      partition_type;
    blockaddr_t block_count;
    unsigned    block_size;
    char *      description;
} device_info_t;

// Used to control IO operations
typedef struct transfer_block_s {
  blockaddr_t lba;
  void *      address;
  unsigned    count;
} transfer_block_t;

/* Constants for the BlockDevice operations */
#define BlockDeviceOp_Read          1
#define BlockDeviceOp_Write         2
#define BlockDeviceOp_Verify        3

/* Various operations on the BlockDevice */
#define BlockDeviceOp_DeviceOp      4
#define BlockDeviceOp_MediaOp       5
#define BlockDeviceOp_SecurityOp    6
#define BlockDeviceOp_SectorOp      7

/* Low-level driver operation on the BlockDevice */
#define BlockDeviceOp_DriverOp      8

/* MiscOps */
#define BlockDeviceOp_DeviceOp_SMART 0x54524D53
#define BlockDeviceOp_SectorOp_TRIM  0x4D495254

#endif

// Service calls
#define Service_BlockDevices_Started 0x81200
#define Service_BlockDevices_Dying 0x81201
#define Service_BlockDevices_DeviceAdded 0x81202
#define Service_BlockDevices_DeviceRemoved 0x81203

// Error numbers
#define ErrorBase_BlockDevices 0x822300
#define ErrorNumber_NoSuchDevice 0x822300
#define ErrorNumber_DeviceInUse 0x822301

// SWI numbers
#define BlockDevice_0 0x5A6C0
#define BlockDevice_Info 0x5A6C0
#define BlockDevice_Read 0x5A6C1
#define BlockDevice_Write 0x5A6C2
#define BlockDevice_Verify 0x5A6C3
#define BlockDevice_DeviceOp 0x5A6C4
#define BlockDevice_MediaOp 0x5A6C5
#define BlockDevice_SecurityOp 0x5A6C6
#define BlockDevice_SectorOp 0x5A6C7
#define BlockDevice_DriverOp 0x5A6C8
#define BlockDevice_Register 0x5A6D0
#define BlockDevice_Deregister 0x5A6D1
#define BlockDevice_Enumerate 0x5A6D2
#define BlockDevice_Rescan 0x5A6D3

#endif
