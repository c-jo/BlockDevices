Device information block

+0  device_flags:
        None defined
+4  Interface and media type
        b0-15:  Interface type
                    0 = Unknown
                    1 = FDC
                    2 = ST506
                    3 = IDE
                    4 = SATA
                    5 = SCSI
                    6 = USB
                    7 = NVMe
                    other: not currently defined
        b16-31: Media type
                    0 = Unknown
                    1 = FloppyDisc
                    2 = HardDisc
                    3 = Optical
                    4 = SSD
                    other: not currently defined
+8  parent_device id, or 0 if none
+16 parent partition details:
        b0-7:   Partition scheme:
                    0 = None
                    1 = MBR
                    2 = GPT
                    other: not currently defined
        b8-15:  Partition index
+20 partition type (using the partition scheme):
+24 number of blocks on device (64 bit)
+32 size of blocks
+36 pointer to 0-terminated string describing manufacturer
+40 pointer to 0-terminated string describing product
+44 pointer to 0-terminated string describing serial number
+48 pointer to 0-terminated string describing firmware version



SWI API

SWI BlockDevices_Enumerate
=>  R0 = last device id, or 0 to start enumeration
<=  R0 = 0 if no more devices
         or device id of this device
    R1 = device information block

Enumerates the currently registered devices.


SWI BlockDevices_Read
=>  R0 = device id to read to
    R1 = flags for the read operation (?)
    R2 = transfer block:
            +0  64bit LBA to read
            +4  pointer to memory to read into
            +8  number of bytes to read


Reads data from the block device.
On return from the read operation, the transfer block should return the block updated
with a new LBA, pointer to memory and number of bytes, even if the transfer failed.

FIXME: Is R2 actually a list of blocks? How is it terminated?
What are the flags?

Errors:
    BadDevice: returned when the device id supplied is not valid.


SWI BlockDevices_Write
=>  R0 = device id to write to
    R1 = flags for the write operation (?)
    R2 = transfer block:
            <as for BlockDevices_Read>

Writes data to the block device.


SWI BlockDevices_Register

=>  R0 = flags (must be 0)
    R1 = pointer to the device information block
    R2 = pointer to entry point
    R3 = entry point R12
<=  R0 = device id for registered device

Register a block device driver.

Errors:
    RegisterFailed: Reported when the device is not recognised.


SWI BlockDevices_Deregister

=>  R0 = device id to deregister

Deregister a block device driver.


Entrypoint:

=>  R0 = Operation code:
            1 => Read data
            2 => Write data
    R1..R9 = parameters dependant on the entry point
