Device information block

+0  device_flags:
        b0:     Device is read only
        b1:     Device supports eject
        b31:    Device is being debugged
        b1-31:  Must be 0
+4  Interface and media type
        b0-15:  Interface type
                    0 = Unknown
                    1 = FDC
                    2 = ST506
                    3 = IDE
                    4 = SATA
                    5 = SCSI
                    6 = USB
                    7 = NVMe
                    other: not currently defined
        b16-31: Media type
                    0 = Unknown
                    1 = FloppyDisc
                    2 = HardDisc
                    3 = Optical
                    4 = SSD
                    other: not currently defined
+8  parent_device id, or 0 if none
+16 parent partition details:
        b0-7:   Partition scheme:
                    0 = None
                    1 = MBR
                    2 = GPT
                    other: not currently defined
        b8-15:  Partition index
+20 partition type (using the partition scheme):
+24 number of blocks on device (64 bit)
+32 size of blocks
+36 pointer to 0-terminated string describing device name
+40 pointer to 0-terminated string describing manufacturer
+44 pointer to 0-terminated string describing product
+48 pointer to 0-terminated string describing serial number
+52 pointer to 0-terminated string describing firmware version


Device names

Device names are a `/` separated list of components which make up
the device, in a simple tree structure. The device paths always
start with a `/` character once registered. Identifiers within the
device path are usually lower case, but are not case sensitive.
They should, generally, be given as simple ASCII strings. Indexes
given within the device name should be 0-indexed unless an existing
naming scheme requires a different form. A separator character
should be used for each logical component of the path.

For example, a device path might take the form:

/scsi/1/2/3     - The SCSI device on bus 1, device 2, LUN 3.
/nvme/0/1       - The second disk attached to the first NVMe
                  device.
/nvme/0/1/gpt/0 - The first partition on the above device,
                  using the GUID Partition Type format.


SWI API

SWI BlockDevices_Enumerate
=>  R0 = last device id, or 0 to start enumeration
<=  R0 = 0 if no more devices
         or device id of this device
    R1 = device information block

Enumerates the currently registered devices.


SWI BlockDevices_Read
=>  R0 = device id to read to
    R1 = flags for the read operation (?)
    R2 = transfer block:
            +0  64bit LBA to read
            +4  pointer to memory to read into
            +8  number of bytes to read


Reads data from the block device.
On return from the read operation, the transfer block should return the block updated
with a new LBA, pointer to memory and number of bytes, even if the transfer failed.

FIXME: Is R2 actually a list of blocks? How is it terminated?
What are the flags?

Errors:
    BadDevice: returned when the device id supplied is not valid.


SWI BlockDevices_Write
=>  R0 = device id to write to
    R1 = flags for the write operation (?)
    R2 = transfer block:
            <as for BlockDevices_Read>

Writes data to the block device.

Errors:
    ReadOnly: Reported when the device is not writeable.


SWI BlockDevices_MiscOp
=>  R0 = device id to operate on
    R1 = operation type:
            b28-31:     domain:
                            0   Device - operations that address the device itself
                            1   Media - operations that address the media storing data
                            2   Security - operations that control the security of data
                            3   Sector - operations that affect sector data
            b27         status/health request
            b23-26      data type in R1/R2:
                            0   opaque
                            1   read string data in R2, length in R3
                            2   64bit value (low in R2, high in R3)
                            3   read data in R2, length in R3
                            4   R2 contains a reference to a block
                            5   R2 contains a reference to a block and block count
                            6   R2 contains a reference to a list of blocks
                            7   R2 contains a reference to a list of blocks and counts
            b16-22      reserved, must be 0
            b0-15:      dependant on the domain
    R2-R9 dependant on operation type

Performs miscellaneous operations on the block device.
The operation code is structured such that operations can be decoded by the BlockDevices
when debug is enabled, and to ensure that there is some consistency between the
interfaces used.

Errors:
    ReadOnly: Reported when the device is not writeable.


SWI BlockDevices_MiscOp &0 (PowerEject)
=>  R0 = device id to operate on
    R1 = 0 (device operation power eject)

Requests that the block device performs an eject operation on the media.
By necessity, the block device driver should also deregister the block device,
as it will no longer be accessible.

Errors:
    BadMiscOp: Reported if this operation is not supported.


SWI BlockDevices_MiscOp &1 (Identify)
=>  R0 = device id to operate on
    R1 = 1 (device operation: identify)
    R2 = 1 to enable identifying light or similar
         0 to disable identifying light

Requests that the device show a light to indicate which physical device is
being controlled.

Errors:
    BadMiscOp: Reported if this operation is not supported.


SWI BlockDevices_Register

=>  R0 = flags (must be 0)
    R1 = pointer to the device information block
    R2 = pointer to entry point
    R3 = entry point R12
<=  R0 = device id for registered device

Register a block device driver.

On registration the device name may be given one of 4 ways:

* 0 or an empty string, to use a simple incrementing value.
  This should only be used for prototype devices.
* A fully specified path, starting with a `/` character.
* A device name, with parent device supplied. In this form,
  the device name will be appended to the path of the parent
  device.
* A device name, without a parent device supplied. In this
  form, the device name will have a `/` character prepended.

Errors:
    RegisterFailed: Reported when the device is not recognised.
    RegisterFailedFlags: Reported when the flags supplied are not recognised.


SWI BlockDevices_Deregister

=>  R0 = device id to deregister

Deregister a block device driver.


Entrypoint:

=>  R0 = Operation code:
            1 => Read data
            2 => Write data
    R1..R9 = parameters dependant on the entry point
