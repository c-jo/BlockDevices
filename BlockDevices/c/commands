/*******************************************************************
 * File:        commands
 * Purpose:     Implementation of the *Commands
 * Author:      Chris Johns
 ******************************************************************/

#include <stdlib.h>
#include <string.h>
#include <stdio.h>
#include "kernel.h"
#include "swis.h"

#include "modhead.h"
#include "commands.h"
#include "devices.h"

typedef struct idmessages_s {
    int num;
    const char *message;
} idmessages_t;
#define IDMESSAGE_LAST (-1)


static idmessages_t interface_type_names[] = {
    { BlockDevice_InterfaceType_Unknown, "-" },
    { BlockDevice_InterfaceType_FDC, "FDC" },
    { BlockDevice_InterfaceType_ST506, "ST506" },
    { BlockDevice_InterfaceType_IDE, "ATA" },
    { BlockDevice_InterfaceType_SATA, "SATA" },
    { BlockDevice_InterfaceType_SCSI, "SCSI" },
    { BlockDevice_InterfaceType_NVMe, "NVMe" },
    { IDMESSAGE_LAST }
};

static idmessages_t media_type_names[] = {
    { BlockDevice_MediaType_Unknown, "-" },
    { BlockDevice_MediaType_FloppyDisc, "FloppyDisc" },
    { BlockDevice_MediaType_HardDisc, "HardDisc" },
    { BlockDevice_MediaType_Optical, "Optical" },
    { BlockDevice_MediaType_SSD, "SSD" },
    { IDMESSAGE_LAST }
};


/*******************************************************************
 Function:      lookup_description
 Description:   Look up a descriptions in a table.
 Parameters:    num = number to lookup
                msgs-> the table of messages (idmessages_t list)
                def-> the default message
 Returns:       pointer to the message, or def if no value found.
 ******************************************************************/
const char *lookup_description(int num, idmessages_t *msgs, const char *def)
{
    /* FIXME: Internationalising these message lookups could be done here if we cared */
    while (msgs->num != IDMESSAGE_LAST)
    {
        if (msgs->num == num)
            return msgs->message;
        msgs++;
    }
    return def;
}


/*******************************************************************
 Function:      Cmd_BlockDevices
 Description:   Display information about the devices
 Parameters:    none
 Returns:       pointer to an error block if failed
                NULL if successful
 ******************************************************************/
_kernel_oserror *Cmd_BlockDevices(void)
{
    device_t *device;

    for (device = 0; (device=devices_after(device)) != NULL; )
    {
        char iftype[12];
        char mediatype[12];
        printf("%5i : %s\n",
               (int)device->device_id,
               device->info.name);

        sprintf(iftype, "IF#%i", device->info.interface_type);
        sprintf(mediatype, "Media#%i", device->info.media_type);
        printf("%5s   %-8s  %-16s\n",
               "",
               lookup_description(device->info.interface_type, interface_type_names, iftype),
               lookup_description(device->info.media_type, media_type_names, mediatype)
               );

        printf("%5s   %-24s  %-32s  %-9s  %s\n",
               "",
               device->info.manufacturer ? device->info.manufacturer : "",
               device->info.product      ? device->info.product      : "",
               device->info.serial       ? device->info.serial       : "",
               device->info.firmware     ? device->info.firmware     : "");
    }
    return NULL;
}
